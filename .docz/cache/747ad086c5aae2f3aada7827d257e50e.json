{"remainingRequest":"/Users/alex/Repos/pickitt/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/alex/Repos/pickitt/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[],\"cacheDirectory\":true,\"babelrc\":false}!/Users/alex/Repos/pickitt/documentation/components/Alert.jsx","dependencies":[{"path":"/Users/alex/Repos/pickitt/documentation/components/Alert.jsx","mtime":1537723224933},{"path":"/Users/alex/Repos/pickitt/node_modules/cache-loader/dist/cjs.js","mtime":1537678131756},{"path":"/Users/alex/Repos/pickitt/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  padding: 15px 20px;\\n  background: white;\\n  border-radius: 3px;\\n  color: white;\\n  background: \", \";\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nimport React, { Fragment } from 'react';\nimport styled from 'react-emotion';\nvar kinds = {\n  info: '#5352ED',\n  positive: '#2ED573',\n  negative: '#FF4757',\n  warning: '#FFA502'\n};\nvar AlertStyled = styled('div')(_templateObject(), function (_ref) {\n  var _ref$kind = _ref.kind,\n      kind = _ref$kind === void 0 ? 'info' : _ref$kind;\n  return kinds[kind];\n});\nexport var Alert = function Alert(props) {\n  return React.createElement(AlertStyled, props);\n};\nAlert.defaultProps = {\n  kind: 'info'\n};\nAlert.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Alert\",\n  \"props\": {\n    \"kind\": {\n      \"defaultValue\": {\n        \"value\": \"'info'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"'info'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'positive'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'negative'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'warning'\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};",{"version":3,"sources":["/Users/alex/Repos/pickitt/documentation/components/Alert.jsx"],"names":["React","Fragment","styled","kinds","info","positive","negative","warning","AlertStyled","kind","Alert","props","defaultProps"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,eAAnB;AAGA,IAAMC,KAAK,GAAG;AACZC,EAAAA,IAAI,EAAE,SADM;AAEZC,EAAAA,QAAQ,EAAE,SAFE;AAGZC,EAAAA,QAAQ,EAAE,SAHE;AAIZC,EAAAA,OAAO,EAAE;AAJG,CAAd;AAOA,IAAMC,WAAW,GAAGN,MAAM,CAAC,KAAD,CAAT,oBAKD;AAAA,uBAAGO,IAAH;AAAA,MAAGA,IAAH,0BAAU,MAAV;AAAA,SAAuBN,KAAK,CAACM,IAAD,CAA5B;AAAA,CALC,CAAjB;AAQA,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK;AAAA,SAAI,oBAAC,WAAD,EAAiBA,KAAjB,CAAJ;AAAA,CAAnB;AAMPD,KAAK,CAACE,YAAN,GAAqB;AACnBH,EAAAA,IAAI,EAAE;AADa,CAArB","sourcesContent":["import React, { Fragment } from 'react'\nimport styled from 'react-emotion'\nimport t from 'prop-types'\n\nconst kinds = {\n  info: '#5352ED',\n  positive: '#2ED573',\n  negative: '#FF4757',\n  warning: '#FFA502',\n}\n\nconst AlertStyled = styled('div')`\n  padding: 15px 20px;\n  background: white;\n  border-radius: 3px;\n  color: white;\n  background: ${({ kind = 'info' }) => kinds[kind]};\n`\n\nexport const Alert = props => <AlertStyled {...props} />\n\nAlert.propTypes = {\n  kind: t.oneOf(['info', 'positive', 'negative', 'warning']),\n}\n\nAlert.defaultProps = {\n  kind: 'info',\n}\n"]}]}